generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  // Runtime URL (pooled/Accelerate)
  url       = env("PRISMA_DATABASE_URL")
  // Direct URL for migrations
  directUrl = env("POSTGRES_URL")
}

model User {
  id           String            @id @default(cuid())
  email        String            @unique
  name         String?
  passwordHash String
  createdAt    DateTime          @default(now())
  // Relations
  members      HouseholdMember[]
}

model Household {
  id        String            @id @default(cuid())
  name      String
  createdAt DateTime          @default(now())
  members   HouseholdMember[]
  invites   Invite[]
  accounts  Account[]
  finance   FinanceSettings?
  lists     ShoppingList[]
}

model HouseholdMember {
  id          String    @id @default(cuid())
  householdId String
  userId      String
  role        String    @default("member")
  createdAt   DateTime  @default(now())
  household   Household @relation(fields: [householdId], references: [id])
  user        User      @relation(fields: [userId], references: [id])

  @@unique([householdId, userId])
}

model Invite {
  id              String    @id @default(cuid())
  token           String    @unique
  householdId     String
  email           String?
  createdByUserId String
  expiresAt       DateTime
  createdAt       DateTime  @default(now())
  household       Household @relation(fields: [householdId], references: [id])
}

model Account {
  id          String    @id @default(cuid())
  householdId String
  name        String
  kind        String // "monthly" | "expenses" | "savings" | other
  balance     Decimal?  @db.Decimal(12, 2)
  goal        Decimal?  @db.Decimal(12, 2)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  household   Household @relation(fields: [householdId], references: [id])

  @@index([householdId])
}

model FinanceSettings {
  id          String    @id @default(cuid())
  householdId String    @unique
  currency    String    @default("EUR")
  config      Json?
  updatedAt   DateTime  @updatedAt
  household   Household @relation(fields: [householdId], references: [id])
}

model ShoppingList {
  id          String         @id @default(cuid())
  householdId String
  name        String
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  items       ShoppingItem[]
  household   Household      @relation(fields: [householdId], references: [id])

  @@unique([householdId, name])
}

model ShoppingItem {
  id        String       @id @default(cuid())
  listId    String
  name      String
  qty       String?
  category  String?
  notes     String?
  checked   Boolean      @default(false)
  price     Decimal?     @db.Decimal(12, 2)
  store     String?
  updatedAt DateTime     @updatedAt
  list      ShoppingList @relation(fields: [listId], references: [id])

  @@index([listId])
}
